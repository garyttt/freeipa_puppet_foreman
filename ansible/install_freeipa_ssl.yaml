---
# How to run this playbook:
# 0 List hosts:         ansible-playbook -vvv -i inventory/hosts -l [hostname|hostgrp] --list-hosts install_freeipa_ssl.yaml -K
# 1 Syntax check:       ansible-playbook -vvv -i inventory/hosts -l [hostname|hostgrp] --syntax-check install_freeipa_ssl.yaml -K
# 2.1 Dry-Run playbook: ansible-playbook -vvv -i inventory/hosts -l [hostname|hostgrp] -C install_freeipa_ssl.yaml -K
# 2.2 Dry-Run tasks:    ansible-playbook -vvv -i inventory/hosts -l [hostname|hostgrp] install_freeipa_ssl.yaml -K
#  set check_mode: yes for selected tasks
# 3 Actual-Run tasks:   ansible-playbook -vvv -i inventory/hosts -l [hostname|hostgrp] install_freeipa_ssl.yaml -K
#  set check_mode: no for selected tasks
# 4 Actual-Run playbook: ansible-playbook -vv -i inventory/hosts -l [hostname|hostgrp] install_freeipa_ssl.yaml -K
# Pre-requisites: 
# 1. RHEL Linux for remote host 
# (Note: Ubuntu 20.04 does not support FreeIPA as of Apr 2021 and 18.04 has un-fixed installation bug)
# 2. run_user@controller_host SSH key trusted by dacadmin@remote_host
# 3. Make sure IPA IP is in DNS or /etc/hosts or you can add --no-host-dns option to avoid hostname against DNS

# Ref: https://computingforgeeks.com/secure-freeipa-server-with-lets-encrypt-ssl-certificate/

- name: Install FreeIPA Letâ€™s Encrypt SSL Cert
  hosts: all
  become: yes
  gather_facts: no
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
  vars_prompt:
    - name: EMAIL
      prompt: IPA Apache Web Server SSL Cert EMAIL Contact, press Enter for default of garyttt@singnet.com.sg
      default: "garyttt@singnet.com.sg"
      private: no
    - name: FQDN
      prompt: IPA Apache Web Server SSL Cert FQDN, press Enter for default of ipa.example.local
      default: "ipa.example.local"
      private: no
    - name: PASSPHRASE
      prompt: Pass Phrase for /var/lib/ipa/private/httpd.key
      private: yes
  tasks:
    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      selinux:
        policy: targeted
        state: permissive
      ignore_errors: yes
    - name: YUM Update 
      yum: 
        name: '*'
        state: latest
    - name: Install EPEL
      yum:
        name: "epel-release"
        state: present
    - name: Install certbot
      yum:
        name: [ 'certbot', 'python3-certbot-apache' ]
        state: latest
    - name: Verify certbot version and take a backup of current certs and private key
      shell: |
        certbot --version
        [ ! -f /var/lib/ipa/certs/httpd.crt.orig ]   && cp -p /var/lib/ipa/certs/httpd.crt   /var/lib/ipa/certs/httpd.crt.orig
        [ ! -f /var/lib/ipa/private/httpd.key.orig ] && cp -p /var/lib/ipa/private/httpd.key /var/lib/ipa/private/httpd.key.orig
    - name: Install/Configure Let's Encrypt SSL Cert with freeipa-letsencrypt scripts - Method 2 - Copy
      copy:
        src: freeipa-letsencrypt
        dest: /root/
        remote_src: no
    - name: Install/Configure Let's Encrypt SSL Cert with freeipa-letsencrypt scripts - Method 2 - Execute
      shell: |
        cd /root/freeipa-letsencrypt
        sed -i s/^EMAIL=.*/FQDN={{ EMAIL }}/ renew-le.sh
        sed -i s/^FQDN=.*/FQDN={{ FQDN }}/ setup-le.sh
        sed -i /renew-le.sh/s/^/#/ setup-le.sh  # renew-le.sh --first-time is interactive and will ask for private key
        chmod +x renew-le.sh setup-le.sh
        bash ./setup-le.sh
      register: output
    - debug:
        var: output
    - name: Dispaly post setup one-time instructions
      shell: |
        cat <<EOF >&1
        Please login as root at Primary Master {{ FQDN }} and complete the setup by running the followings:
        /root/freeipa-letsencrypt/renew-le.sh --first-time
        systemctl restart httpd
        ipa-certupdate
        ipactl status && systemctl status ipa
        openssl s_client -showcerts -verify 5 {{ FQDN }}:443
        EOF
      register: output
    - debug:
        var: output

